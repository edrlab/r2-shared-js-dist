{"version":3,"file":"cli.js","sourceRoot":"","sources":["../../../../src/_utils/cli.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as crypto from \"crypto\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport * as util from \"util\";\n\nimport { Publication } from \"@models/publication\";\nimport { Link } from \"@models/publication-link\";\nimport { PublicationParsePromise } from \"@parser/publication-parser\";\nimport { setLcpNativePluginPath } from \"@r2-lcp-js/parser/epub/lcp\";\nimport { streamToBufferPromise } from \"@r2-utils-js/_utils/stream/BufferUtils\";\nimport { IStreamAndLength, IZip } from \"@r2-utils-js/_utils/zip/zip\";\nimport { Transformers } from \"@transform/transformer\";\nimport { JSON as TAJSON } from \"ta-json-x\";\n\nimport { initGlobalConverters_GENERIC, initGlobalConverters_SHARED } from \"../init-globals\";\n\n// import { initGlobalConverters_OPDS } from \"@opds/init-globals\";\n\n// initGlobalConverters_OPDS();\ninitGlobalConverters_SHARED();\ninitGlobalConverters_GENERIC();\n\nsetLcpNativePluginPath(path.join(process.cwd(), \"LCP\", \"lcp.node\"));\n\nconsole.log(\"process.cwd():\");\nconsole.log(process.cwd());\n\nconsole.log(\"__dirname: \");\nconsole.log(__dirname);\n\nconst args = process.argv.slice(2);\nconsole.log(\"args:\");\nconsole.log(args);\n\nif (!args[0]) {\n    console.log(\"FILEPATH ARGUMENT IS MISSING.\");\n    process.exit(1);\n}\nconst argPath = args[0].trim();\nlet filePath = argPath;\nconsole.log(filePath);\n\nconst isHTTP = filePath.startsWith(\"http\");\nif (!isHTTP) {\n    if (!fs.existsSync(filePath)) {\n        filePath = path.join(__dirname, argPath);\n        console.log(filePath);\n        if (!fs.existsSync(filePath)) {\n            filePath = path.join(process.cwd(), argPath);\n            console.log(filePath);\n            if (!fs.existsSync(filePath)) {\n                console.log(\"FILEPATH DOES NOT EXIST.\");\n                process.exit(1);\n            }\n        }\n    }\n\n    const stats = fs.lstatSync(filePath);\n    if (!stats.isFile() && !stats.isDirectory()) {\n        console.log(\"FILEPATH MUST BE FILE OR DIRECTORY.\");\n        process.exit(1);\n    }\n}\n\nconst fileName = path.basename(filePath);\nconst ext = path.extname(fileName).toLowerCase();\n\nconst isEPUBPacked = /\\.epub[3]?$/.test(ext);\nconst isEPUBExploded = isHTTP ? false : fs.existsSync(path.join(filePath, \"META-INF\", \"container.xml\"));\nconst isEPUB = isEPUBPacked || isEPUBExploded;\n\nlet outputDirPath: string | undefined;\nif (args[1]) {\n    const argDir = args[1].trim();\n    let dirPath = argDir;\n    console.log(dirPath);\n    if (!fs.existsSync(dirPath)) {\n        dirPath = path.join(__dirname, argDir);\n        console.log(dirPath);\n        if (!fs.existsSync(dirPath)) {\n            dirPath = path.join(process.cwd(), argDir);\n            console.log(dirPath);\n            if (!fs.existsSync(dirPath)) {\n                console.log(\"DIRPATH DOES NOT EXIST.\");\n                process.exit(1);\n            } else {\n                if (!fs.lstatSync(dirPath).isDirectory()) {\n                    console.log(\"DIRPATH MUST BE DIRECTORY.\");\n                    process.exit(1);\n                }\n            }\n        }\n    }\n\n    dirPath = fs.realpathSync(dirPath);\n\n    const fileNameNoExt = fileName + \"_R2_EXTRACTED\";\n    console.log(fileNameNoExt);\n    outputDirPath = path.join(dirPath, fileNameNoExt);\n    console.log(outputDirPath);\n    if (fs.existsSync(outputDirPath)) {\n        console.log(\"OUTPUT FOLDER ALREADY EXISTS!\");\n        process.exit(1);\n    }\n}\n\nlet decryptKeys: string[] | undefined;\nif (args[2]) {\n    decryptKeys = args[2].trim().split(\";\");\n}\n\n// tslint:disable-next-line:no-floating-promises\n(async () => {\n    let publication: Publication;\n    try {\n        publication = await PublicationParsePromise(filePath);\n    } catch (err) {\n        console.log(\"== Publication Parser: reject\");\n        console.log(err);\n        return;\n    }\n\n    if (isEPUB) {\n        if (outputDirPath) {\n            try {\n                await extractEPUB(publication, outputDirPath, decryptKeys);\n            } catch (err) {\n                console.log(\"== Publication extract FAIL\");\n                console.log(err);\n                return;\n            }\n        }\n    } else if (ext === \".cbz\") {\n        dumpPublication(publication);\n    }\n})();\n\nfunction extractEPUB_ManifestJSON(pub: Publication, outDir: string) {\n\n    const manifestJson = TAJSON.serialize(pub);\n\n    const arrLinks = [];\n    if (manifestJson.readingOrder) {\n        arrLinks.push(...manifestJson.readingOrder);\n    }\n    if (manifestJson.resources) {\n        arrLinks.push(...manifestJson.resources);\n    }\n    arrLinks.forEach((link: any) => {\n        if (link.properties && link.properties.encrypted) {\n            delete link.properties.encrypted;\n\n            let atLeastOne = false;\n            const jsonProps = Object.keys(link.properties);\n            if (jsonProps) {\n                jsonProps.forEach((jsonProp) => {\n                    if (link.properties.hasOwnProperty(jsonProp)) {\n                        atLeastOne = true;\n                        return false;\n                    }\n                    return true;\n                });\n            }\n            if (!atLeastOne) {\n                delete link.properties;\n            }\n        }\n    });\n\n    const manifestJsonStr = JSON.stringify(manifestJson, null, \"  \");\n    // console.log(manifestJsonStr);\n\n    const manifestJsonPath = path.join(outDir, \"manifest.json\");\n    fs.writeFileSync(manifestJsonPath, manifestJsonStr, \"utf8\");\n}\n\nasync function extractEPUB_Check(zip: IZip, outDir: string) {\n    const zipEntries = await zip.getEntries();\n    for (const zipEntry of zipEntries) {\n        if (zipEntry !== \"mimetype\" && !zipEntry.startsWith(\"META-INF/\") && !zipEntry.endsWith(\".opf\") &&\n            zipEntry !== \".DS_Store\") { // zip entry can actually be exploded EPUB file\n            const expectedOutputPath = path.join(outDir, zipEntry);\n            if (!fs.existsSync(expectedOutputPath)) {\n                console.log(\"Zip entry not extracted??\");\n                console.log(expectedOutputPath);\n            }\n        }\n    }\n}\n\nasync function extractEPUB_ProcessKeys(pub: Publication, keys: string[] | undefined) {\n\n    if (!pub.LCP || !keys) {\n        return;\n    }\n\n    const keysSha256Hex = keys.map((key) => {\n        console.log(\"@@@\");\n        console.log(key);\n\n        // sniffing for already-encoded plain-text passphrase\n        // (looking for SHA256 checksum / hex digest)\n        if (key.length === 64) { // 32 bytes\n            let isHex = true;\n            for (let i = 0; i < key.length; i += 2) {\n\n                const hexByte = key.substr(i, 2).toLowerCase();\n\n                const parsedInt = parseInt(hexByte, 16);\n                if (isNaN(parsedInt)) {\n                    isHex = false;\n                    break;\n                }\n\n                // let hexByteCheck = parsedInt.toString(16);\n                // if (hexByteCheck.length === 1) {\n                //     hexByteCheck = \"0\" + hexByteCheck; // pad\n                // }\n                // // console.log(hexByteCheck);\n                // if (hexByteCheck !== hexByte) {\n                //     console.log(hexByte + \" != \" + hexByteCheck);\n                //     isHex = false;\n                //     break;\n                // }\n            }\n            if (isHex) {\n                return key;\n            }\n        }\n\n        const checkSum = crypto.createHash(\"sha256\");\n        checkSum.update(key);\n        const keySha256Hex = checkSum.digest(\"hex\");\n        console.log(keySha256Hex);\n        return keySha256Hex;\n\n        // const lcpPass64 = new Buffer(hash).toString(\"base64\");\n        // const lcpPassHex = new Buffer(lcpPass64, \"base64\").toString(\"utf8\");\n    });\n\n    try {\n        await pub.LCP.tryUserKeys(keysSha256Hex);\n    } catch (err) {\n        console.log(err);\n        throw Error(\"FAIL publication.LCP.tryUserKeys()\");\n\n        // DRMErrorCode (from r2-lcp-client)\n        // 1 === NO CORRECT PASSPHRASE / UERKEY IN GIVEN ARRAY\n        //     // No error\n        //     NONE = 0,\n        //     /**\n        //         WARNING ERRORS > 10\n        //     **/\n        //     // License is out of date (check start and end date)\n        //     LICENSE_OUT_OF_DATE = 11,\n        //     /**\n        //         CRITICAL ERRORS > 100\n        //     **/\n        //     // Certificate has been revoked in the CRL\n        //     CERTIFICATE_REVOKED = 101,\n        //     // Certificate has not been signed by CA\n        //     CERTIFICATE_SIGNATURE_INVALID = 102,\n        //     // License has been issued by an expired certificate\n        //     LICENSE_SIGNATURE_DATE_INVALID = 111,\n        //     // License signature does not match\n        //     LICENSE_SIGNATURE_INVALID = 112,\n        //     // The drm context is invalid\n        //     CONTEXT_INVALID = 121,\n        //     // Unable to decrypt encrypted content key from user key\n        //     CONTENT_KEY_DECRYPT_ERROR = 131,\n        //     // User key check invalid\n        //     USER_KEY_CHECK_INVALID = 141,\n        //     // Unable to decrypt encrypted content from content key\n        //     CONTENT_DECRYPT_ERROR = 151\n    }\n}\n\nasync function extractEPUB_Link(pub: Publication, zip: IZip, outDir: string, link: Link) {\n\n    const pathInZip = link.Href;\n    console.log(\"===== \" + pathInZip);\n\n    let zipStream_: IStreamAndLength;\n    try {\n        zipStream_ = await zip.entryStreamPromise(pathInZip);\n    } catch (err) {\n        console.log(pathInZip);\n        console.log(err);\n        return;\n    }\n\n    let transformedStream: IStreamAndLength;\n    try {\n        transformedStream = await Transformers.tryStream(\n            pub, link,\n            zipStream_,\n            false, 0, 0);\n    } catch (err) {\n        console.log(pathInZip);\n        console.log(err);\n        return;\n    }\n\n    // if (transformedStream !== zipStream_) {\n    //     console.log(\"(asset transformed)\");\n    // }\n    zipStream_ = transformedStream; // can be unchanged\n\n    let zipData: Buffer;\n    try {\n        zipData = await streamToBufferPromise(zipStream_.stream);\n    } catch (err) {\n        console.log(pathInZip);\n        console.log(err);\n        return;\n    }\n    // console.log(\"CHECK: \" + zipStream_.length + \" ==> \" + zipData.length);\n\n    const linkOutputPath = path.join(outDir, pathInZip);\n    ensureDirs(linkOutputPath);\n    fs.writeFileSync(linkOutputPath, zipData);\n}\n\nasync function extractEPUB(pub: Publication, outDir: string, keys: string[] | undefined) {\n\n    // automatically handles exploded filesystem too,\n    // via the zip-ex.ts abstraction in r2-utils-js\n    // returned by zip-factory.ts (zipLoadPromise() function)\n    const zipInternal = pub.findFromInternal(\"zip\");\n    if (!zipInternal) {\n        console.log(\"No publication zip!?\");\n        return;\n    }\n\n    const zip = zipInternal.Value as IZip;\n\n    try {\n        await extractEPUB_ProcessKeys(pub, keys);\n    } catch (err) {\n        console.log(err);\n        throw err;\n    }\n\n    fs.mkdirSync(outDir); // { recursive: false }\n\n    extractEPUB_ManifestJSON(pub, outDir);\n\n    const links = [];\n    if (pub.Resources) {\n        links.push(...pub.Resources);\n    }\n    if (pub.Spine) { // JSON.readingOrder\n        links.push(...pub.Spine);\n    }\n    // if (zip.hasEntry(\"META-INF/container.xml\")) {\n    //     const l = new Link();\n    //     l.Href = \"META-INF/container.xml\";\n    //     links.push(l);\n    // }\n    for (const link of links) {\n        try {\n            await extractEPUB_Link(pub, zip, outDir, link);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    try {\n        await extractEPUB_Check(zip, outDir);\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction ensureDirs(fspath: string) {\n    const dirname = path.dirname(fspath);\n\n    if (!fs.existsSync(dirname)) {\n        ensureDirs(dirname);\n        fs.mkdirSync(dirname);\n    }\n}\n\nfunction dumpPublication(publication: Publication) {\n\n    console.log(\"#### RAW OBJECT:\");\n\n    // breakLength: 100  maxArrayLength: undefined\n    console.log(util.inspect(publication,\n        { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n\n    // console.log(\"#### RAW JSON:\");\n    // const publicationJsonObj = JSON.serialize(publication);\n    // console.log(publicationJsonObj);\n\n    // console.log(\"#### PRETTY JSON:\");\n    // const publicationJsonStr = global.JSON.stringify(publicationJsonObj, null, \"  \");\n    // console.log(publicationJsonStr);\n\n    // console.log(\"#### CANONICAL JSON:\");\n    // const publicationJsonStrCanonical = JSON.stringify(sortObject(publicationJsonObj));\n    // console.log(publicationJsonStrCanonical);\n}\n"]}