{"version":3,"file":"publication-link.js","sourceRoot":"","sources":["../../../../src/models/publication-link.ts"],"names":[],"mappings":";;;AAOA,8EAAsE;AAEtE,qCAMiB;AAGjB,+DAAmD;AAGnD,IAAa,IAAI,YAAjB;IAwCW,OAAO,CAAC,IAAc;QACzB,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACjB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM,CAAC,GAAW;QACrB,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YAClB,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACX,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;aAAM;YACH,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACtB;IACL,CAAC;IAEM,MAAM,CAAC,GAAW;QACrB,OAAO,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAKO,eAAe;QACnB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;SACxC;IACL,CAAC;CACJ,CAAA;AAlEG;IADC,sBAAY,CAAC,MAAM,CAAC;;kCACA;AAGrB;IADC,sBAAY,CAAC,MAAM,CAAC;;sCACI;AAGzB;IADC,sBAAY,CAAC,QAAQ,CAAC;;oCACA;AAGvB;IADC,sBAAY,CAAC,OAAO,CAAC;;mCACA;AAGtB;IADC,sBAAY,CAAC,OAAO,CAAC;;mCACA;AAGtB;IADC,sBAAY,CAAC,YAAY,CAAC;sCACP,gCAAU;wCAAC;AAG/B;IADC,sBAAY,CAAC,UAAU,CAAC;;sCACA;AAGzB;IADC,sBAAY,CAAC,SAAS,CAAC;;qCACA;AAGxB;IADC,sBAAY,CAAC,WAAW,CAAC;;uCACC;AAI3B;IAFC,sBAAY,CAAC,UAAU,CAAC;IACxB,yBAAe,CAAC,MAAI,CAAC;;sCACG;AAOzB;IAHC,sBAAY,CAAC,KAAK,CAAC;IACnB,uBAAa,CAAC,8CAAmB,CAAC;IAClC,yBAAe,CAAC,MAAM,CAAC;;iCACF;AA0BtB;IAHC,wBAAc,EAAE;;;;2CAOhB;AApEQ,IAAI;IADhB,oBAAU,EAAE;GACA,IAAI,CAqEhB;AArEY,oBAAI","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { JsonStringConverter } from \"@utils/ta-json-string-converter\";\n// https://github.com/edcarroll/ta-json\nimport {\n    JsonConverter,\n    JsonElementType,\n    JsonObject,\n    JsonProperty,\n    OnDeserialized,\n} from \"ta-json\";\n\nimport { MediaOverlayNode } from \"./media-overlay\";\nimport { Properties } from \"./metadata-properties\";\n\n@JsonObject()\nexport class Link {\n\n    @JsonProperty(\"href\")\n    public Href!: string;\n\n    @JsonProperty(\"type\")\n    public TypeLink!: string;\n\n    @JsonProperty(\"height\")\n    public Height!: number;\n\n    @JsonProperty(\"width\")\n    public Width!: number;\n\n    @JsonProperty(\"title\")\n    public Title!: string;\n\n    @JsonProperty(\"properties\")\n    public Properties!: Properties;\n\n    @JsonProperty(\"duration\")\n    public Duration!: number;\n\n    @JsonProperty(\"bitrate\")\n    public Bitrate!: number;\n\n    @JsonProperty(\"templated\")\n    public Templated!: boolean;\n\n    @JsonProperty(\"children\")\n    @JsonElementType(Link)\n    public Children!: Link[];\n\n    public MediaOverlays: MediaOverlayNode[] | undefined;\n\n    @JsonProperty(\"rel\")\n    @JsonConverter(JsonStringConverter)\n    @JsonElementType(String)\n    public Rel!: string[];\n\n    public AddRels(rels: string[]) {\n        rels.forEach((rel) => {\n            this.AddRel(rel);\n        });\n    }\n\n    public AddRel(rel: string) {\n        if (this.HasRel(rel)) {\n            return;\n        }\n        if (!this.Rel) {\n            this.Rel = [rel];\n        } else {\n            this.Rel.push(rel);\n        }\n    }\n\n    public HasRel(rel: string): boolean {\n        return this.Rel && this.Rel.indexOf(rel) >= 0;\n    }\n\n    @OnDeserialized()\n    // tslint:disable-next-line:no-unused-variable\n    // @ts-ignore: TS6133 (is declared but its value is never read.)\n    private _OnDeserialized() {\n        if (!this.Href) {\n            console.log(\"Link.Href is not set!\");\n        }\n    }\n}\n"]}