{"version":3,"file":"ncx-content.js","sourceRoot":"","sources":["../../../../../src/parser/epub/ncx-content.ts"],"names":[],"mappings":";;;;AAOA,qEAAgF;AAEhF,sDAAsD;AAKtD;IAAA,IAAa,OAAO,GAApB,MAAa,OAAO;QAOhB,IAAI,GAAG;YACH,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;QACD,IAAI,GAAG,CAAC,IAAY;YAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QACjC,CAAC;QAED,IAAI,UAAU;YACV,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBAC3B,OAAO,SAAS,CAAC;aACpB;YACD,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;gBACX,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,OAAO,SAAS,CAAC;aACpB;YACD,IAAI,CAAC,WAAW,GAAG,wBAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1C,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QAC5D,CAAC;QACD,IAAI,UAAU,CAAC,IAAwB;YACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC5B,CAAC;QACM,aAAa,CAAC,IAAY;YAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;YAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC;KACJ,CAAA;IA9BG;QADC,gCAAgB,CAAC,MAAM,CAAC;;yCACJ;IANZ,OAAO;QAHnB,yBAAS,CAAC;YACP,GAAG,EAAE,sCAAsC;SAC9C,CAAC;OACW,OAAO,CAoCnB;IAAD,cAAC;KAAA;AApCY,0BAAO","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { XmlObject, XmlXPathSelector } from \"@r2-utils-js/_utils/xml-js-mapper\";\n\nimport { tryDecodeURI } from \"../../_utils/decodeURI\";\n\n@XmlObject({\n    ncx: \"http://www.daisy.org/z3986/2005/ncx/\",\n})\nexport class Content {\n\n    // XPATH ROOT: /ncx:ncx/ncx:pageList/ncx:pageTarget/ncx:content\n    // XPATH ROOT: /ncx:ncx/ncx:navMap/ncx:navPoint/ncx:content\n\n    @XmlXPathSelector(\"@src\")\n    public Src1!: string;\n    get Src(): string {\n        return this.Src1;\n    }\n    set Src(href: string) {\n        this.Src1 = href;\n        this._urlDecoded = undefined;\n    }\n    private _urlDecoded: string | undefined | null;\n    get SrcDecoded(): string | undefined {\n        if (this._urlDecoded) {\n            return this._urlDecoded;\n        }\n        if (this._urlDecoded === null) {\n            return undefined;\n        }\n        if (!this.Src) {\n            this._urlDecoded = null;\n            return undefined;\n        }\n        this._urlDecoded = tryDecodeURI(this.Src);\n        return !this._urlDecoded ? undefined : this._urlDecoded;\n    }\n    set SrcDecoded(href: string | undefined) {\n        this._urlDecoded = href;\n    }\n    public setSrcDecoded(href: string) {\n        this.Src = href;\n        this.SrcDecoded = href;\n    }\n}\n"]}