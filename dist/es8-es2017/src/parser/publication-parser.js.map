{"version":3,"file":"publication-parser.js","sourceRoot":"","sources":["../../../../src/parser/publication-parser.ts"],"names":[],"mappings":";;;AAQA,iDAA+F;AAC/F,qCAAgE;AAChE,uCAAgE;AAEhE,qCAAmE;AAE5D,KAAK,UAAU,uBAAuB,CAAC,QAAgB;IAC1D,IAAI,OAAgC,CAAC;IACrC,OAAO,qBAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,uBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC1D,CAAC,sBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,qBAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzD,CAAC,4BAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,2BAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAE/D,CAAC,OAAO,GAAG,MAAM,kCAAsB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,iCAAqB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;oBACvF,OAAO,CAAC,MAAM,CAAC,iCAAiC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9E,CAAC;AARD,0DAQC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { Publication } from \"@models/publication\";\nimport { AudioBookParsePromise, AudioBookis, isAudioBookPublication } from \"@parser/audiobook\";\nimport { CbzParsePromise, isCBZPublication } from \"@parser/cbz\";\nimport { EpubParsePromise, isEPUBlication } from \"@parser/epub\";\n\nimport { DivinaParsePromise, isDivinaPublication } from \"./divina\";\n\nexport async function PublicationParsePromise(filePath: string): Promise<Publication> {\n    let isAudio: AudioBookis | undefined;\n    return isEPUBlication(filePath) ? EpubParsePromise(filePath) :\n        (isCBZPublication(filePath) ? CbzParsePromise(filePath) :\n        (isDivinaPublication(filePath) ? DivinaParsePromise(filePath) :\n        // tslint:disable-next-line: no-conditional-assignment\n        (isAudio = await isAudioBookPublication(filePath)) ? AudioBookParsePromise(filePath, isAudio) :\n                Promise.reject(`Unrecognized publication type ${filePath}`)));\n}\n"]}