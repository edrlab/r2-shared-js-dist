{"version":3,"file":"smil-seq.js","sourceRoot":"","sources":["../../../../../src/parser/epub/smil-seq.ts"],"names":[],"mappings":";;;;AAOA,mEAE2C;AAE3C,oDAAsD;AACtD,qDAA6C;AAO7C;IAAyB,+BAAQ;IAAjC;;IAqDA,CAAC;IAlCG,sBAAI,wBAAO;aAAX;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;aACD,UAAY,IAAY;YACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QACjC,CAAC;;;OAJA;IAMD,sBAAI,+BAAc;aAAlB;YACI,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBAC3B,OAAO,SAAS,CAAC;aACpB;YACD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,OAAO,SAAS,CAAC;aACpB;YACD,IAAI,CAAC,WAAW,GAAG,wBAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9C,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QAC5D,CAAC;aACD,UAAmB,IAAwB;YACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC5B,CAAC;;;OAHA;IAIM,+BAAiB,GAAxB,UAAyB,IAAY;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC/B,CAAC;IAxCD;QAFC,gCAAgB,CAAC,mBAAmB,CAAC;QACrC,2BAAW,CAAC,0BAAQ,CAAC;;yCACO;IAW7B;QADC,gCAAgB,CAAC,eAAe,CAAC;;yCACT;IAlBhB,GAAG;QALf,yBAAS,CAAC;YACP,IAAI,EAAE,8BAA8B;YACpC,IAAI,EAAE,2BAA2B;SACpC,CAAC;QACD,qCAAqB,CAAC,KAAK,CAAC;OAChB,GAAG,CAqDf;IAAD,UAAC;CAAA,AArDD,CAAyB,0BAAQ,GAqDhC;AArDY,kBAAG","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport {\n    XmlDiscriminatorValue, XmlItemType, XmlObject, XmlXPathSelector,\n} from \"@r2-utils-js/_utils/xml-js-mapper\";\n\nimport { tryDecodeURI } from \"../../_utils/decodeURI\";\nimport { SeqOrPar } from \"./smil-seq-or-par\";\n\n@XmlObject({\n    epub: \"http://www.idpf.org/2007/ops\",\n    smil: \"http://www.w3.org/ns/SMIL\",\n})\n@XmlDiscriminatorValue(\"seq\")\nexport class Seq extends SeqOrPar {\n\n    // XPATH ROOT: /smil:smil/smil:body\n    // XPATH ROOT: /smil:smil/smil:body/**/smil:seq\n\n    @XmlXPathSelector(\"smil:par|smil:seq\")\n    @XmlItemType(SeqOrPar)\n    public Children!: SeqOrPar[];\n\n    // @XmlXPathSelector(\"smil:seq\")\n    // @XmlItemType(Seq)\n    // public Seq: Seq[];\n\n    // @XmlXPathSelector(\"smil:par\")\n    // @XmlItemType(Par)\n    // public Par: Par[];\n\n    @XmlXPathSelector(\"@epub:textref\")\n    public TextRef1!: string;\n    get TextRef(): string {\n        return this.TextRef1;\n    }\n    set TextRef(href: string) {\n        this.TextRef1 = href;\n        this._urlDecoded = undefined;\n    }\n    private _urlDecoded: string | undefined | null;\n    get TextRefDecoded(): string | undefined {\n        if (this._urlDecoded) {\n            return this._urlDecoded;\n        }\n        if (this._urlDecoded === null) {\n            return undefined;\n        }\n        if (!this.TextRef) {\n            this._urlDecoded = null;\n            return undefined;\n        }\n        this._urlDecoded = tryDecodeURI(this.TextRef);\n        return !this._urlDecoded ? undefined : this._urlDecoded;\n    }\n    set TextRefDecoded(href: string | undefined) {\n        this._urlDecoded = href;\n    }\n    public setTextRefDecoded(href: string) {\n        this.TextRef = href;\n        this.TextRefDecoded = href;\n    }\n\n    // constructor() {\n    //     super();\n    //     this.localName = \"seq\";\n    // }\n}\n"]}