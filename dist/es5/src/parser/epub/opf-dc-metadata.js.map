{"version":3,"file":"opf-dc-metadata.js","sourceRoot":"","sources":["../../../../../src/parser/epub/opf-dc-metadata.ts"],"names":[],"mappings":";;;;AAOA,mEAA6F;AAE7F,2CAAsC;AACtC,uCAAsC;AACtC,mDAA8C;AAC9C,6CAAwC;AACxC,yCAAoC;AAOpC;IAAA;IAgEA,CAAC;IA1DG;QAFC,gCAAgB,CAAC,qBAAqB,CAAC;QACvC,2BAAW,CAAC,iBAAK,CAAC;;6CACI;IAIvB;QAFC,gCAAgB,CAAC,yCAAyC,CAAC;QAC3D,2BAAW,CAAC,MAAM,CAAC;;gDACO;IAI3B;QAFC,gCAAgB,CAAC,+BAA+B,CAAC;QACjD,2BAAW,CAAC,2BAAU,CAAC;;kDACS;IAIjC;QAFC,gCAAgB,CAAC,yBAAyB,CAAC;QAC3C,2BAAW,CAAC,mBAAM,CAAC;;+CACM;IAI1B;QAFC,gCAAgB,CAAC,yBAAyB,CAAC;QAC3C,2BAAW,CAAC,qBAAO,CAAC;;+CACM;IAI3B;QAFC,gCAAgB,CAAC,+CAA+C,CAAC;QACjE,2BAAW,CAAC,MAAM,CAAC;;mDACU;IAI9B;QAFC,gCAAgB,CAAC,2CAA2C,CAAC;QAC7D,2BAAW,CAAC,MAAM,CAAC;;iDACQ;IAI5B;QAFC,gCAAgB,CAAC,iCAAiC,CAAC;QACnD,2BAAW,CAAC,mBAAM,CAAC;;mDACU;IAI9B;QAFC,gCAAgB,CAAC,mBAAmB,CAAC;QACrC,2BAAW,CAAC,mBAAQ,CAAC;;4CACG;IAIzB;QAFC,gCAAgB,CAAC,iCAAiC,CAAC;QACnD,2BAAW,CAAC,MAAM,CAAC;;4CACG;IAIvB;QAFC,gCAAgB,CAAC,qCAAqC,CAAC;QACvD,2BAAW,CAAC,MAAM,CAAC;;8CACK;IAIzB;QAFC,gCAAgB,CAAC,qCAAqC,CAAC;QACvD,2BAAW,CAAC,MAAM,CAAC;;8CACK;IAIzB;QAFC,gCAAgB,CAAC,yCAAyC,CAAC;QAC3D,2BAAW,CAAC,MAAM,CAAC;;gDACO;IAI3B;QAFC,gCAAgB,CAAC,yCAAyC,CAAC;QAC3D,2BAAW,CAAC,MAAM,CAAC;;gDACO;IAI3B;QAFC,gCAAgB,CAAC,qCAAqC,CAAC;QACvD,2BAAW,CAAC,MAAM,CAAC;;8CACK;IA9DhB,UAAU;QALtB,yBAAS,CAAC;YACP,EAAE,EAAE,kCAAkC;YACtC,GAAG,EAAE,8BAA8B;YACnC,IAAI,EAAE,kDAAkD;SAC3D,CAAC;OACW,UAAU,CAgEtB;IAAD,iBAAC;CAAA,AAhED,IAgEC;AAhEY,gCAAU","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { XmlItemType, XmlObject, XmlXPathSelector } from \"@r2-utils-js/_utils/xml-js-mapper\";\n\nimport { Author } from \"./opf-author\";\nimport { MetaDate } from \"./opf-date\";\nimport { Identifier } from \"./opf-identifier\";\nimport { Subject } from \"./opf-subject\";\nimport { Title } from \"./opf-title\";\n\n@XmlObject({\n    dc: \"http://purl.org/dc/elements/1.1/\",\n    opf: \"http://www.idpf.org/2007/opf\",\n    opf2: \"http://openebook.org/namespaces/oeb-package/1.0/\",\n})\nexport class DCMetadata {\n\n    // XPATH ROOT: /opf:package/opf:metadata/dc-metadata or /opf:package/opf:metadata itself\n\n    @XmlXPathSelector(\"dc:Title | dc:title\")\n    @XmlItemType(Title)\n    public Title!: Title[];\n\n    @XmlXPathSelector(\"dc:Language/text() | dc:language/text()\")\n    @XmlItemType(String)\n    public Language!: string[];\n\n    @XmlXPathSelector(\"dc:Identifier | dc:identifier\")\n    @XmlItemType(Identifier)\n    public Identifier!: Identifier[];\n\n    @XmlXPathSelector(\"dc:Creator | dc:creator\")\n    @XmlItemType(Author)\n    public Creator!: Author[];\n\n    @XmlXPathSelector(\"dc:Subject | dc:subject\")\n    @XmlItemType(Subject)\n    public Subject!: Subject[];\n\n    @XmlXPathSelector(\"dc:Description/text() | dc:description/text()\")\n    @XmlItemType(String)\n    public Description!: string[];\n\n    @XmlXPathSelector(\"dc:Publisher/text() | dc:publisher/text()\")\n    @XmlItemType(String)\n    public Publisher!: string[];\n\n    @XmlXPathSelector(\"dc:Contributor | dc:contributor\")\n    @XmlItemType(Author)\n    public Contributor!: Author[];\n\n    @XmlXPathSelector(\"dc:Date | dc:date\")\n    @XmlItemType(MetaDate)\n    public Date!: MetaDate[];\n\n    @XmlXPathSelector(\"dc:Type/text() | dc:type/text()\")\n    @XmlItemType(String)\n    public Type!: string[];\n\n    @XmlXPathSelector(\"dc:Format/text() | dc:format/text()\")\n    @XmlItemType(String)\n    public Format!: string[];\n\n    @XmlXPathSelector(\"dc:Source/text() | dc:source/text()\")\n    @XmlItemType(String)\n    public Source!: string[];\n\n    @XmlXPathSelector(\"dc:Relation/text() | dc:relation/text()\")\n    @XmlItemType(String)\n    public Relation!: string[];\n\n    @XmlXPathSelector(\"dc:Coverage/text() | dc:coverage/text()\")\n    @XmlItemType(String)\n    public Coverage!: string[];\n\n    @XmlXPathSelector(\"dc:Rights/text() | dc:rights/text()\")\n    @XmlItemType(String)\n    public Rights!: string[];\n\n}\n"]}