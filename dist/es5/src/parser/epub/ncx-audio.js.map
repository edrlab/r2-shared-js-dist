{"version":3,"file":"ncx-audio.js","sourceRoot":"","sources":["../../../../../src/parser/epub/ncx-audio.ts"],"names":[],"mappings":";;;;AAOA,mEAAgF;AAEhF,oDAAsD;AAKtD;IAAA;IA0CA,CAAC;IA7BG,sBAAI,sBAAG;aAAP;YACI,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;aACD,UAAQ,IAAY;YAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QACjC,CAAC;;;OAJA;IAMD,sBAAI,6BAAU;aAAd;YACI,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBAC3B,OAAO,SAAS,CAAC;aACpB;YACD,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;gBACX,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,OAAO,SAAS,CAAC;aACpB;YACD,IAAI,CAAC,WAAW,GAAG,wBAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1C,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QAC5D,CAAC;aACD,UAAe,IAAwB;YACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC5B,CAAC;;;OAHA;IAIM,6BAAa,GAApB,UAAqB,IAAY;QAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC3B,CAAC;IAnCD;QADC,gCAAgB,CAAC,YAAY,CAAC;;4CACL;IAG1B;QADC,gCAAgB,CAAC,UAAU,CAAC;;0CACL;IAGxB;QADC,gCAAgB,CAAC,MAAM,CAAC;;uCACJ;IAZZ,KAAK;QAHjB,yBAAS,CAAC;YACP,GAAG,EAAE,sCAAsC;SAC9C,CAAC;OACW,KAAK,CA0CjB;IAAD,YAAC;CAAA,AA1CD,IA0CC;AA1CY,sBAAK","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { XmlObject, XmlXPathSelector } from \"@r2-utils-js/_utils/xml-js-mapper\";\n\nimport { tryDecodeURI } from \"../../_utils/decodeURI\";\n\n@XmlObject({\n    ncx: \"http://www.daisy.org/z3986/2005/ncx/\",\n})\nexport class Audio {\n\n    // XPATH ROOT: /ncx:ncx/ncx:pageList/ncx:pageTarget/ncx:navLabel/ncx:audio\n    // XPATH ROOT: /ncx:ncx/ncx:navMap/ncx:navPoint/ncx:navLabel/ncx:audio\n\n    @XmlXPathSelector(\"@clipBegin\")\n    public ClipBegin!: string;\n\n    @XmlXPathSelector(\"@clipEnd\")\n    public ClipEnd!: string;\n\n    @XmlXPathSelector(\"@src\")\n    public Src1!: string;\n    get Src(): string {\n        return this.Src1;\n    }\n    set Src(href: string) {\n        this.Src1 = href;\n        this._urlDecoded = undefined;\n    }\n    private _urlDecoded: string | undefined | null;\n    get SrcDecoded(): string | undefined {\n        if (this._urlDecoded) {\n            return this._urlDecoded;\n        }\n        if (this._urlDecoded === null) {\n            return undefined;\n        }\n        if (!this.Src) {\n            this._urlDecoded = null;\n            return undefined;\n        }\n        this._urlDecoded = tryDecodeURI(this.Src);\n        return !this._urlDecoded ? undefined : this._urlDecoded;\n    }\n    set SrcDecoded(href: string | undefined) {\n        this._urlDecoded = href;\n    }\n    public setSrcDecoded(href: string) {\n        this.Src = href;\n        this.SrcDecoded = href;\n    }\n}\n"]}