{"version":3,"file":"opf.js","sourceRoot":"","sources":["../../../../../src/parser/epub/opf.ts"],"names":[],"mappings":";;;;AAOA,mEAA6F;AAE7F,+CAA0C;AAC1C,+CAA0C;AAC1C,iDAA4C;AAC5C,yCAAoC;AAOpC;IAAA;IA+BA,CAAC;IA1BG;QADC,gCAAgB,CAAC,cAAc,CAAC;0CACf,uBAAQ;yCAAC;IAI3B;QAFC,gCAAgB,CAAC,uBAAuB,CAAC;QACzC,2BAAW,CAAC,uBAAQ,CAAC;;yCACO;IAG7B;QADC,gCAAgB,CAAC,WAAW,CAAC;0CACf,iBAAK;sCAAC;IAIrB;QAFC,gCAAgB,CAAC,yBAAyB,CAAC;QAC3C,2BAAW,CAAC,yBAAS,CAAC;;sCACI;IAG3B;QADC,gCAAgB,CAAC,oBAAoB,CAAC;;iDACN;IAGjC;QADC,gCAAgB,CAAC,MAAM,CAAC;;oCACL;IAGpB;QADC,gCAAgB,CAAC,mBAAmB,CAAC;;qCACjB;IAGrB;QADC,gCAAgB,CAAC,UAAU,CAAC;;wCACL;IA5Bf,GAAG;QALf,yBAAS,CAAC;YACP,EAAE,EAAE,kCAAkC;YACtC,GAAG,EAAE,8BAA8B;YACnC,GAAG,EAAE,sCAAsC;SAC9C,CAAC;OACW,GAAG,CA+Bf;IAAD,UAAC;CAAA,AA/BD,IA+BC;AA/BY,kBAAG","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { XmlItemType, XmlObject, XmlXPathSelector } from \"@r2-utils-js/_utils/xml-js-mapper\";\n\nimport { Manifest } from \"./opf-manifest\";\nimport { Metadata } from \"./opf-metadata\";\nimport { Reference } from \"./opf-reference\";\nimport { Spine } from \"./opf-spine\";\n\n@XmlObject({\n    dc: \"http://purl.org/dc/elements/1.1/\",\n    opf: \"http://www.idpf.org/2007/opf\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n})\nexport class OPF {\n\n    // XPATH ROOT: /opf:package\n\n    @XmlXPathSelector(\"opf:metadata\")\n    public Metadata!: Metadata;\n\n    @XmlXPathSelector(\"opf:manifest/opf:item\")\n    @XmlItemType(Manifest)\n    public Manifest!: Manifest[];\n\n    @XmlXPathSelector(\"opf:spine\")\n    public Spine!: Spine;\n\n    @XmlXPathSelector(\"opf:guide/opf:reference\")\n    @XmlItemType(Reference)\n    public Guide!: Reference[];\n\n    @XmlXPathSelector(\"@unique-identifier\")\n    public UniqueIdentifier!: string;\n\n    @XmlXPathSelector(\"@dir\")\n    public Dir!: string;\n\n    @XmlXPathSelector(\"@lang | @xml:lang\")\n    public Lang!: string;\n\n    @XmlXPathSelector(\"@version\")\n    public Version!: string;\n\n    public ZipPath: string | undefined; // URL already decodeURI()\n}\n"]}