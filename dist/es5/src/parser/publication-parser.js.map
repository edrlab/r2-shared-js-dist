{"version":3,"file":"publication-parser.js","sourceRoot":"","sources":["../../../../src/parser/publication-parser.ts"],"names":[],"mappings":";;;AAOA,uBAAyB;AACzB,2BAA6B;AAG7B,mCAA8C;AAC9C,qCAAgD;AAEhD,iCAA8C,QAAgB;;;;YAEpD,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACnC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;YAC3C,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,eAAe,CAAC,CAAC,CAAC;YAC1G,WAAO,MAAM,CAAC,CAAC;oBACX,uBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC5B,qBAAe,CAAC,QAAQ,CAAC,EAAC;;;CACjC;AARD,0DAQC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as fs from \"fs\";\nimport * as path from \"path\";\n\nimport { Publication } from \"@models/publication\";\nimport { CbzParsePromise } from \"@parser/cbz\";\nimport { EpubParsePromise } from \"@parser/epub\";\n\nexport async function PublicationParsePromise(filePath: string): Promise<Publication> {\n\n    const fileName = path.basename(filePath);\n    const ext = path.extname(fileName).toLowerCase();\n    const isEPUB = /\\.epub[3]?$/.test(ext) || fs.existsSync(path.join(filePath, \"META-INF\", \"container.xml\"));\n    return isEPUB ?\n        EpubParsePromise(filePath) :\n        CbzParsePromise(filePath);\n}\n"]}