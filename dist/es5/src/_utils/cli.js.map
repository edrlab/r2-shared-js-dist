{"version":3,"file":"cli.js","sourceRoot":"","sources":["../../../../src/_utils/cli.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport * as util from \"util\";\n\nimport { Publication } from \"@models/publication\";\nimport { PublicationParsePromise } from \"@parser/publication-parser\";\nimport { setLcpNativePluginPath } from \"@r2-lcp-js/parser/epub/lcp\";\n\nimport { initGlobals } from \"../init-globals\";\n\ninitGlobals();\nsetLcpNativePluginPath(path.join(process.cwd(), \"LCP\", \"lcp.node\"));\n\nconsole.log(\"process.cwd():\");\nconsole.log(process.cwd());\n\nconsole.log(\"__dirname: \");\nconsole.log(__dirname);\n\nconst args = process.argv.slice(2);\nconsole.log(\"args:\");\nconsole.log(args);\n\nif (!args[0]) {\n    console.log(\"FILEPATH ARGUMENT IS MISSING.\");\n    process.exit(1);\n}\nconst argPath = args[0].trim();\nlet filePath = argPath;\nconsole.log(filePath);\nif (!fs.existsSync(filePath)) {\n    filePath = path.join(__dirname, argPath);\n    console.log(filePath);\n    if (!fs.existsSync(filePath)) {\n        filePath = path.join(process.cwd(), argPath);\n        console.log(filePath);\n        if (!fs.existsSync(filePath)) {\n            console.log(\"FILEPATH DOES NOT EXIST.\");\n            process.exit(1);\n        }\n    }\n}\n\nconst stats = fs.lstatSync(filePath);\nif (!stats.isFile() && !stats.isDirectory()) {\n    console.log(\"FILEPATH MUST BE FILE OR DIRECTORY.\");\n    process.exit(1);\n}\n\nconst fileName = path.basename(filePath);\nconst ext = path.extname(fileName).toLowerCase();\n\n// tslint:disable-next-line:no-floating-promises\n(async () => {\n\n    let publication: Publication;\n    try {\n        publication = await PublicationParsePromise(filePath);\n    } catch (err) {\n        console.log(\"== Publication Parser: reject\");\n        console.log(err);\n        return;\n    }\n    console.log(\"== Publication Parser: resolve: \" + publication.Links);\n\n    const isEPUB = /\\.epub[3]?$/.test(ext) || fs.existsSync(path.join(filePath, \"META-INF\", \"container.xml\"));\n    if (isEPUB) {\n        dumpPublication(publication);\n    } else if (ext === \".cbz\") {\n        dumpPublication(publication);\n    }\n})();\n\nexport function dumpPublication(publication: Publication) {\n\n    console.log(\"#### RAW OBJECT:\");\n\n    // breakLength: 100  maxArrayLength: undefined\n    console.log(util.inspect(publication,\n        { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n\n    // console.log(\"#### RAW JSON:\");\n    // const publicationJsonObj = JSON.serialize(publication);\n    // console.log(publicationJsonObj);\n\n    // console.log(\"#### PRETTY JSON:\");\n    // const publicationJsonStr = global.JSON.stringify(publicationJsonObj, null, \"  \");\n    // console.log(publicationJsonStr);\n\n    // console.log(\"#### CANONICAL JSON:\");\n    // const publicationJsonStrCanonical = JSON.stringify(sortObject(publicationJsonObj));\n    // console.log(publicationJsonStrCanonical);\n}\n"]}