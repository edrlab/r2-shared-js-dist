{"version":3,"file":"zipHasEntry.js","sourceRoot":"","sources":["../../../../src/_utils/zipHasEntry.ts"],"names":[],"mappings":";;;AASA,SAAsB,WAAW,CAAC,GAAS,EAAE,OAAe,EAAE,YAAgC;;;;;;oBACtF,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;yBAC3B,GAAW,CAAC,aAAa,EAA1B,cAA0B;;;;oBAEhB,WAAO,GAAW,CAAC,aAAa,CAAC,OAAO,CAAC,EAAA;;oBAA/C,GAAG,GAAG,SAAyC,CAAC;;;;oBAEhD,OAAO,CAAC,GAAG,CAAC,KAAG,CAAC,CAAC;;;yBAGrB,CAAA,CAAC,GAAG,IAAI,YAAY,IAAI,YAAY,KAAK,OAAO,CAAA,EAAhD,cAAgD;oBAChD,OAAO,CAAC,GAAG,CAAC,kBAAgB,OAAO,YAAO,YAAc,CAAC,CAAC;oBAC1D,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;yBACvB,GAAW,CAAC,aAAa,EAA1B,cAA0B;;;;oBAEhB,WAAO,GAAW,CAAC,aAAa,CAAC,OAAO,CAAC,EAAA;;oBAA/C,GAAG,GAAG,SAAyC,CAAC;;;;oBAEhD,OAAO,CAAC,GAAG,CAAC,KAAG,CAAC,CAAC;;wBAI7B,WAAO,GAAG,EAAC;;;;CACd;AArBD,kCAqBC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { IZip } from \"@r2-utils-js/_utils/zip/zip\";\n\nexport async function zipHasEntry(zip: IZip, zipPath: string, zipPathOther: string | undefined): Promise<boolean> {\n    let has = zip.hasEntry(zipPath);\n    if ((zip as any).hasEntryAsync) { // hacky!!! (HTTP fetch)\n        try {\n            has = await (zip as any).hasEntryAsync(zipPath);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n    if (!has && zipPathOther && zipPathOther !== zipPath) {\n        console.log(`zipHasEntry: ${zipPath} => ${zipPathOther}`);\n        has = zip.hasEntry(zipPath);\n        if ((zip as any).hasEntryAsync) { // hacky!!! (HTTP fetch)\n            try {\n                has = await (zip as any).hasEntryAsync(zipPath);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    }\n    return has;\n}\n"]}