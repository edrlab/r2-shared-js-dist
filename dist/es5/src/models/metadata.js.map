{"version":3,"file":"metadata.js","sourceRoot":"","sources":["../../../../src/models/metadata.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\n// https://github.com/edcarroll/ta-json\nimport {\n    JsonElementType,\n    JsonObject,\n    JsonProperty,\n    OnDeserialized,\n} from \"ta-json\";\n\nimport { BelongsTo } from \"./metadata-belongsto\";\nimport { Contributor } from \"./metadata-contributor\";\nimport { MediaOverlay } from \"./metadata-media-overlay\";\nimport { IStringMap } from \"./metadata-multilang\";\nimport { Properties } from \"./metadata-properties\";\nimport { Subject } from \"./metadata-subject\";\n\n// export interface IMeta {\n//     property: string;\n//     value: string;\n//     children: IMeta[];\n// }\n\n@JsonObject()\nexport class Metadata {\n    @JsonProperty(\"@type\")\n    public RDFType!: string;\n\n    @JsonProperty(\"title\")\n    // @JsonType(String)\n    // not needed because primitive string union with\n    // simple object type (string keys, string values)\n    public Title!: string | IStringMap; // | string[] | IStringMap[]\n\n    @JsonProperty(\"identifier\")\n    public Identifier!: string;\n\n    @JsonProperty(\"author\")\n    @JsonElementType(Contributor)\n    public Author!: Contributor[];\n\n    @JsonProperty(\"translator\")\n    @JsonElementType(Contributor)\n    public Translator!: Contributor[];\n\n    @JsonProperty(\"editor\")\n    @JsonElementType(Contributor)\n    public Editor!: Contributor[];\n\n    @JsonProperty(\"artist\")\n    @JsonElementType(Contributor)\n    public Artist!: Contributor[];\n\n    @JsonProperty(\"illustrator\")\n    @JsonElementType(Contributor)\n    public Illustrator!: Contributor[];\n\n    @JsonProperty(\"letterer\")\n    @JsonElementType(Contributor)\n    public Letterer!: Contributor[];\n\n    @JsonProperty(\"penciler\")\n    @JsonElementType(Contributor)\n    public Penciler!: Contributor[];\n\n    @JsonProperty(\"colorist\")\n    @JsonElementType(Contributor)\n    public Colorist!: Contributor[];\n\n    @JsonProperty(\"inker\")\n    @JsonElementType(Contributor)\n    public Inker!: Contributor[];\n\n    @JsonProperty(\"narrator\")\n    @JsonElementType(Contributor)\n    public Narrator!: Contributor[];\n\n    @JsonProperty(\"contributor\")\n    @JsonElementType(Contributor)\n    public Contributor!: Contributor[];\n\n    @JsonProperty(\"publisher\")\n    @JsonElementType(Contributor)\n    public Publisher!: Contributor[];\n\n    @JsonProperty(\"imprint\")\n    @JsonElementType(Contributor)\n    public Imprint!: Contributor[];\n\n    @JsonProperty(\"language\")\n    @JsonElementType(String)\n    public Language!: string[];\n\n    @JsonProperty(\"modified\")\n    public Modified!: Date;\n\n    @JsonProperty(\"published\")\n    public PublicationDate!: Date;\n\n    @JsonProperty(\"description\")\n    public Description!: string;\n\n    @JsonProperty(\"direction\")\n    public Direction!: string;\n\n    @JsonProperty(\"rendition\")\n    public Rendition!: Properties;\n\n    @JsonProperty(\"source\")\n    public Source!: string;\n\n    @JsonProperty(\"epub-type\")\n    @JsonElementType(String)\n    public EpubType!: string[];\n\n    @JsonProperty(\"rights\")\n    public Rights!: string;\n\n    @JsonProperty(\"subject\")\n    @JsonElementType(Subject)\n    public Subject!: Subject[];\n\n    @JsonProperty(\"belongs_to\")\n    public BelongsTo!: BelongsTo;\n\n    @JsonProperty(\"duration\")\n    public Duration!: number;\n\n    @JsonProperty(\"media-overlay\")\n    public MediaOverlay!: MediaOverlay;\n\n    // public OtherMetadata: IMeta[];\n\n    @OnDeserialized()\n    // tslint:disable-next-line:no-unused-variable\n    // @ts-ignore: TS6133 (is declared but its value is never read.)\n    private _OnDeserialized() {\n        if (!this.Title) {\n            console.log(\"Metadata.Title is not set!\");\n        }\n        if (!this.Identifier) {\n            console.log(\"Metadata.Identifier is not set!\");\n        }\n    }\n}\n"]}