{"version":3,"file":"publication.js","sourceRoot":"","sources":["../../../../src/models/publication.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\n// import { JsonStringConverter } from \"@r2-utils-js/_utils/ta-json-string-converter\";\n\nimport { LCP } from \"@r2-lcp-js/parser/epub/lcp\";\nimport { IZip } from \"@r2-utils-js/_utils/zip/zip\";\n// https://github.com/edcarroll/ta-json\nimport {\n    // JsonConverter,\n    JsonElementType,\n    JsonObject,\n    JsonProperty,\n    OnDeserialized,\n} from \"ta-json-x\";\n\nimport { IInternal } from \"./internal\";\nimport { Metadata } from \"./metadata\";\nimport { Link } from \"./publication-link\";\n\n// import { IPublicationCollection } from \"./publication-collection\";\n\n@JsonObject()\nexport class Publication {\n\n    // @JsonConverter(JsonStringConverter)\n    @JsonProperty(\"@context\")\n    @JsonElementType(String)\n    public Context!: string[];\n\n    @JsonProperty(\"metadata\")\n    public Metadata!: Metadata;\n\n    @JsonProperty(\"links\")\n    @JsonElementType(Link)\n    public Links!: Link[];\n\n    @JsonProperty(\"readingOrder\")\n    @JsonElementType(Link)\n    public Spine!: Link[];\n\n    @JsonProperty(\"resources\")\n    @JsonElementType(Link)\n    public Resources!: Link[];\n\n    @JsonProperty(\"toc\")\n    @JsonElementType(Link)\n    public TOC!: Link[];\n\n    @JsonProperty(\"page-list\")\n    @JsonElementType(Link)\n    public PageList!: Link[];\n\n    @JsonProperty(\"landmarks\")\n    @JsonElementType(Link)\n    public Landmarks!: Link[];\n\n    @JsonProperty(\"loi\")\n    @JsonElementType(Link)\n    public LOI!: Link[];\n\n    @JsonProperty(\"loa\")\n    @JsonElementType(Link)\n    public LOA!: Link[];\n\n    @JsonProperty(\"lov\")\n    @JsonElementType(Link)\n    public LOV!: Link[];\n\n    @JsonProperty(\"lot\")\n    @JsonElementType(Link)\n    public LOT!: Link[];\n\n    // // OPDS2\n    // @JsonProperty(\"images\")\n    // @JsonElementType(Link)\n    // public Images!: Link[];\n\n    // public OtherLinks: Link[];\n    // public OtherCollections: IPublicationCollection[];\n\n    public LCP: LCP | undefined;\n\n    private Internal: IInternal[] | undefined;\n\n    public freeDestroy() {\n        console.log(\"freeDestroy: Publication\");\n        if (this.Internal) {\n            const zipInternal = this.findFromInternal(\"zip\");\n            if (zipInternal) {\n                const zip = zipInternal.Value as IZip;\n                zip.freeDestroy();\n            }\n        }\n    }\n\n    public findFromInternal(key: string): IInternal | undefined {\n        if (this.Internal) {\n            const found = this.Internal.find((internal) => {\n                return internal.Name === key;\n            });\n            if (found) {\n                return found;\n            }\n        }\n        return undefined;\n    }\n\n    public AddToInternal(key: string, value: any) {\n        const existing = this.findFromInternal(key);\n        if (existing) {\n            existing.Value = value;\n        } else {\n            if (!this.Internal) {\n                this.Internal = [];\n            }\n\n            const internal: IInternal = { Name: key, Value: value };\n            this.Internal.push(internal);\n        }\n    }\n\n    // public findLinKByHref(href: string): Link | undefined {\n    //     if (this.Spine) {\n    //         const ll = this.Spine.find((link) => {\n    //             if (link.Href && href.indexOf(link.Href) >= 0) {\n    //                 return true;\n    //             }\n    //             return false;\n    //         });\n    //         if (ll) {\n    //             return ll;\n    //         }\n    //     }\n    //     return undefined;\n    // }\n\n    public GetCover(): Link | undefined {\n        return this.searchLinkByRel(\"cover\");\n    }\n\n    public GetNavDoc(): Link | undefined {\n        return this.searchLinkByRel(\"contents\");\n    }\n\n    public searchLinkByRel(rel: string): Link | undefined {\n        if (this.Resources) {\n            const ll = this.Resources.find((link) => {\n                return link.HasRel(rel);\n            });\n            if (ll) {\n                return ll;\n            }\n        }\n\n        if (this.Spine) {\n            const ll = this.Spine.find((link) => {\n                return link.HasRel(rel);\n            });\n            if (ll) {\n                return ll;\n            }\n        }\n\n        if (this.Links) {\n            const ll = this.Links.find((link) => {\n                return link.HasRel(rel);\n            });\n            if (ll) {\n                return ll;\n            }\n        }\n\n        return undefined;\n    }\n\n    public AddLink(typeLink: string, rel: string[], url: string, templated: boolean | undefined) {\n        const link = new Link();\n        link.AddRels(rel);\n        link.Href = url;\n        link.TypeLink = typeLink;\n\n        if (typeof templated !== \"undefined\") {\n            link.Templated = templated;\n        }\n\n        if (!this.Links) {\n            this.Links = [];\n        }\n        this.Links.push(link);\n    }\n\n    @OnDeserialized()\n    // tslint:disable-next-line:no-unused-variable\n    // @ts-ignore: TS6133 (is declared but its value is never read.)\n    private _OnDeserialized() {\n        if (!this.Metadata) {\n            console.log(\"Publication.Metadata is not set!\");\n        }\n        if (!this.Links) {\n            console.log(\"Publication.Links is not set!\");\n        }\n    }\n}\n"]}