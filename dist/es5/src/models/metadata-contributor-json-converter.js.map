{"version":3,"file":"metadata-contributor-json-converter.js","sourceRoot":"","sources":["../../../../src/models/metadata-contributor-json-converter.ts"],"names":[],"mappings":";;AAOA,uCAImB;AAEnB,+DAAqD;AAErD;IAAA;IA2BA,CAAC;IA1BU,4CAAS,GAAhB,UAAiB,QAAqB;QAGlC,OAAO,gBAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAEM,8CAAW,GAAlB,UAAmB,KAAgB;QAQ/B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,IAAM,CAAC,GAAG,IAAI,kCAAW,EAAE,CAAC;YAC5B,CAAC,CAAC,IAAI,GAAG,KAAe,CAAC;YACzB,OAAO,CAAC,CAAC;SACZ;aAAM;YACH,OAAO,gBAAM,CAAC,WAAW,CAAc,KAAK,EAAE,kCAAW,CAAC,CAAC;SAC9D;IACL,CAAC;IAEM,8DAA2B,GAAlC;QACI,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,+BAAC;AAAD,CAAC,AA3BD,IA2BC;AA3BY,4DAAwB","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport {\n    IPropertyConverter,\n    JSON as TAJSON,\n    JsonValue,\n} from \"ta-json-x\";\n\nimport { Contributor } from \"./metadata-contributor\";\n\nexport class JsonContributorConverter implements IPropertyConverter {\n    public serialize(property: Contributor): JsonValue {\n        // console.log(\"JsonContributorConverter.serialize()\");\n\n        return TAJSON.serialize(property);\n    }\n\n    public deserialize(value: JsonValue): Contributor {\n        // console.log(\"JsonContributorConverter.deserialize()\");\n\n        // if (value instanceof Array) {\n        //     return value.map((v) => {\n        //         return this.deserialize(v);\n        //     }) as Contributor[];\n        // } else\n        if (typeof value === \"string\") {\n            const c = new Contributor();\n            c.Name = value as string;\n            return c;\n        } else {\n            return TAJSON.deserialize<Contributor>(value, Contributor);\n        }\n    }\n\n    public collapseArrayWithSingleItem(): boolean {\n        return true;\n    }\n}\n"]}