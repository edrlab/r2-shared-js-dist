{"version":3,"file":"test-JSON-Rel.js","sourceRoot":"","sources":["../../../test/test-JSON-Rel.ts"],"names":[],"mappings":"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","sourcesContent":["import test from \"ava\";\nimport * as path from \"path\";\n\nimport { Link } from \"@models/publication-link\";\nimport { setLcpNativePluginPath } from \"@r2-lcp-js/parser/epub/lcp\";\nimport { JsonArray, TaJsonDeserialize, TaJsonSerialize } from \"@r2-lcp-js/serializable\";\n\nimport { initGlobalConverters_GENERIC, initGlobalConverters_SHARED } from \"../src/init-globals\";\nimport { checkType_Array, checkType_String, inspect, logJSON } from \"./helpers\";\n\ninitGlobalConverters_SHARED();\ninitGlobalConverters_GENERIC();\n\nsetLcpNativePluginPath(path.join(process.cwd(), \"LCP\", \"lcp.node\"));\n\n// ==========================\n\nconst relStr1 = \"rel1\";\nconst relStr2 = \"rel2\";\n\n// ==========================\n\ntest(\"JSON SERIALIZE: Publication Link.Rel => string[]\", (t) => {\n\n    const link = new Link();\n    link.AddRel(relStr1);\n    link.AddRel(relStr2);\n    inspect(link);\n\n    const json = TaJsonSerialize(link);\n    logJSON(json);\n\n    checkType_Array(t, json.rel);\n    const arr = json.rel as JsonArray;\n    t.is(arr.length, 2);\n\n    checkType_String(t, arr[0]);\n    t.is(arr[0], relStr1);\n\n    checkType_String(t, arr[1]);\n    t.is(arr[1], relStr2);\n});\n\ntest(\"JSON SERIALIZE: Publication Link.Rel => string\", (t) => {\n\n    const link = new Link();\n    link.AddRel(relStr1);\n    inspect(link);\n\n    const json = TaJsonSerialize(link);\n    logJSON(json);\n\n    checkType_String(t, json.rel);\n    t.is(json.rel, relStr1);\n});\n\ntest(\"JSON DESERIALIZE: Publication Link.Rel => string[]\", (t) => {\n\n    const json: any = {};\n    json.rel = [relStr1, relStr2];\n    logJSON(json);\n\n    const link: Link = TaJsonDeserialize<Link>(json, Link);\n    inspect(link);\n\n    checkType_Array(t, link.Rel);\n    t.is(link.Rel.length, 2);\n\n    checkType_String(t, link.Rel[0]);\n    t.is(link.Rel[0], relStr1);\n\n    checkType_String(t, link.Rel[1]);\n    t.is(link.Rel[1], relStr2);\n});\n\ntest(\"JSON DESERIALIZE: Publication Link.Rel => string[1]\", (t) => {\n\n    const json: any = {};\n    json.rel = [relStr1];\n    logJSON(json);\n\n    const link: Link = TaJsonDeserialize<Link>(json, Link);\n    inspect(link);\n\n    checkType_Array(t, link.Rel);\n    t.is(link.Rel.length, 1);\n\n    checkType_String(t, link.Rel[0]);\n    t.is(link.Rel[0], relStr1);\n});\n\ntest(\"JSON DESERIALIZE: Publication Link.Rel => string\", (t) => {\n\n    const json: any = {};\n    json.rel = relStr1;\n    logJSON(json);\n\n    const link: Link = TaJsonDeserialize<Link>(json, Link);\n    inspect(link);\n\n    checkType_Array(t, link.Rel);\n    t.is(link.Rel.length, 1);\n\n    checkType_String(t, link.Rel[0]);\n    t.is(link.Rel[0], relStr1);\n});\n\n// ==========================\n"]}