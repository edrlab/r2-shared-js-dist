{"version":3,"file":"transformer-html.js","sourceRoot":"","sources":["../../../../src/transform/transformer-html.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as debug_ from \"debug\";\nimport * as mime from \"mime-types\";\n\nimport { Publication } from \"@models/publication\";\nimport { Link } from \"@models/publication-link\";\nimport { bufferToStream, streamToBufferPromise } from \"@r2-utils-js/_utils/stream/BufferUtils\";\nimport { IStreamAndLength } from \"@r2-utils-js/_utils/zip/zip\";\n\nimport { ITransformer } from \"./transformer\";\n\nconst debug = debug_(\"r2:shared#transform/transformer-html\");\n\nexport type TTransformFunction = (\n    publication: Publication,\n    link: Link,\n    data: string,\n    sessionInfo: string | undefined,\n) => string;\n\nexport class TransformerHTML implements ITransformer {\n\n    private readonly transformString: TTransformFunction;\n\n    constructor(transformerFunction: TTransformFunction) {\n        this.transformString = transformerFunction;\n    }\n\n    public supports(publication: Publication, link: Link): boolean {\n\n        let mediaType = mime.lookup(link.Href);\n        if (link && link.TypeLink) {\n            mediaType = link.TypeLink;\n        }\n\n        if (mediaType === \"text/html\" || mediaType === \"application/xhtml+xml\") {\n            const pubDefinesLayout = publication.Metadata && publication.Metadata.Rendition\n                && publication.Metadata.Rendition.Layout;\n            const pubIsFixed = pubDefinesLayout && publication.Metadata.Rendition.Layout === \"fixed\";\n\n            const linkDefinesLayout = link.Properties && link.Properties.Layout;\n            const linkIsFixed = linkDefinesLayout && link.Properties.Layout === \"fixed\";\n\n            if (linkIsFixed || pubIsFixed) {\n                return false;\n            }\n\n            return true; // pass: reflow doc\n        }\n\n        return false;\n    }\n\n    public async transformStream(\n        publication: Publication,\n        link: Link,\n        stream: IStreamAndLength,\n        _isPartialByteRangeRequest: boolean,\n        _partialByteBegin: number,\n        _partialByteEnd: number,\n        sessionInfo: string | undefined,\n        ): Promise<IStreamAndLength> {\n\n        let data: Buffer;\n        try {\n            data = await streamToBufferPromise(stream.stream);\n        } catch (err) {\n            return Promise.reject(err);\n        }\n\n        let buff: Buffer;\n        try {\n            buff = await this.transformBuffer(publication, link, data, sessionInfo);\n        } catch (err) {\n            return Promise.reject(err);\n        }\n\n        const sal: IStreamAndLength = {\n            length: buff.length,\n            reset: async () => {\n                return Promise.resolve(sal);\n            },\n            stream: bufferToStream(buff),\n        };\n        return Promise.resolve(sal);\n    }\n\n    private async transformBuffer(\n        publication: Publication,\n        link: Link,\n        data: Buffer,\n        sessionInfo: string | undefined,\n    ): Promise<Buffer> {\n\n        try {\n            const str = data.toString(\"utf8\");\n            const str_ = this.transformString(publication, link, str, sessionInfo);\n            return Promise.resolve(Buffer.from(str_));\n        } catch (err) {\n            debug(\"TransformerHTML fail => no change\");\n            debug(err);\n            return Promise.resolve(data); //  no change\n        }\n    }\n}\n"]}