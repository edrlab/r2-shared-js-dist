{"version":3,"file":"ncx-audio.js","sourceRoot":"","sources":["../../../../../src/parser/epub/ncx-audio.ts"],"names":[],"mappings":";;;;AAOA,qEAAgF;AAEhF,sDAAsD;AAKtD,IAAa,KAAK,GAAlB,MAAa,KAAK;IAad,IAAI,GAAG;QACH,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IACD,IAAI,GAAG,CAAC,IAAY;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;IACjC,CAAC;IAED,IAAI,UAAU;QACV,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;QACD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;YAC3B,OAAO,SAAS,CAAC;SACpB;QACD,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACX,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,SAAS,CAAC;SACpB;QACD,IAAI,CAAC,WAAW,GAAG,IAAA,wBAAY,EAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1C,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;IAC5D,CAAC;IACD,IAAI,UAAU,CAAC,IAAwB;QACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;IACM,aAAa,CAAC,IAAY;QAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC3B,CAAC;CACJ,CAAA;AApCG;IADC,IAAA,gCAAgB,EAAC,YAAY,CAAC;;wCACL;AAG1B;IADC,IAAA,gCAAgB,EAAC,UAAU,CAAC;;sCACL;AAGxB;IADC,IAAA,gCAAgB,EAAC,MAAM,CAAC;;mCACJ;AAZZ,KAAK;IAHjB,IAAA,yBAAS,EAAC;QACP,GAAG,EAAE,sCAAsC;KAC9C,CAAC;GACW,KAAK,CA0CjB;AA1CY,sBAAK","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { XmlObject, XmlXPathSelector } from \"@r2-utils-js/_utils/xml-js-mapper\";\n\nimport { tryDecodeURI } from \"../../_utils/decodeURI\";\n\n@XmlObject({\n    ncx: \"http://www.daisy.org/z3986/2005/ncx/\",\n})\nexport class Audio {\n\n    // XPATH ROOT: /ncx:ncx/ncx:pageList/ncx:pageTarget/ncx:navLabel/ncx:audio\n    // XPATH ROOT: /ncx:ncx/ncx:navMap/ncx:navPoint/ncx:navLabel/ncx:audio\n\n    @XmlXPathSelector(\"@clipBegin\")\n    public ClipBegin!: string;\n\n    @XmlXPathSelector(\"@clipEnd\")\n    public ClipEnd!: string;\n\n    @XmlXPathSelector(\"@src\")\n    public Src1!: string;\n    get Src(): string {\n        return this.Src1;\n    }\n    set Src(href: string) {\n        this.Src1 = href;\n        this._urlDecoded = undefined;\n    }\n    private _urlDecoded: string | undefined | null;\n    get SrcDecoded(): string | undefined {\n        if (this._urlDecoded) {\n            return this._urlDecoded;\n        }\n        if (this._urlDecoded === null) {\n            return undefined;\n        }\n        if (!this.Src) {\n            this._urlDecoded = null;\n            return undefined;\n        }\n        this._urlDecoded = tryDecodeURI(this.Src);\n        return !this._urlDecoded ? undefined : this._urlDecoded;\n    }\n    set SrcDecoded(href: string | undefined) {\n        this._urlDecoded = href;\n    }\n    public setSrcDecoded(href: string) {\n        this.Src = href;\n        this.SrcDecoded = href;\n    }\n}\n"]}